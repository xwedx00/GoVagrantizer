package main

import (
	"bufio"
	"fmt"
	"os"
	"strings"
	"time"

	"github.com/fatih/color"
	"github.com/spf13/cobra"
)

var rootCmd = &cobra.Command{
	Use:   "vagrant-wrapper",
	Short: "A Vagrant CLI wrapper",
	Long:  "A Vagrant CLI wrapper that generates a Vagrantfile based on user input.",
	Run: func(cmd *cobra.Command, args []string) {
		reader := bufio.NewReader(os.Stdin)

		fmt.Println("Welcome to the Vagrant CLI wrapper!")
		fmt.Println("Let's generate a Vagrantfile.")

		vagrantfileContent := fmt.Sprintf(`
# Vagrantfile generated by Vagrant CLI wrapper
Vagrant.configure("2") do |config|
  config.vm.box = "%s"
  config.vm.network "private_network", ip: "%s"
  config.vm.provider "virtualbox" do |vb|
    vb.name = "%s"
  end
end
`, promptForInput("Enter the name of the Vagrant box:", reader),
			promptForInput("Enter the IP address for the VM:", reader),
			promptForInput("Enter the name for your VM:", reader))

		fileName := "Vagrantfile"
		err := writeToFile(fileName, vagrantfileContent)
		if err != nil {
			color.Red("Failed to write Vagrantfile: %s", err)
			return
		}

		color.Green("Vagrantfile generated successfully!")
		color.Cyan("Timestamp: %s", time.Now().Format("2006-01-02 15:04:05"))
	},
}

func promptForInput(message string, reader *bufio.Reader) string {
	color.Blue(message)
	fmt.Print(">> ")
	input, _ := reader.ReadString('\n')
	return strings.TrimSpace(input)
}

func writeToFile(fileName string, content string) error {
	file, err := os.Create(fileName)
	if err != nil {
		return err
	}
	defer file.Close()

	_, err = file.WriteString(content)
	if err != nil {
		return err
	}

	return nil
}

func main() {
	if err := rootCmd.Execute(); err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
}
